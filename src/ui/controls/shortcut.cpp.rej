diff a/src/ui/controls/shortcut.cpp b/src/ui/controls/shortcut.cpp	(rejected hunks)
@@ -75,108 +75,6 @@ BOOL CShortcut::EventProcess(const Event &event)
 
 void CShortcut::Draw()
 {
-   float       zoom;
-   int         icon, mode;
-
-   icon = 0;
-   zoom = 0.8f;
-   mode = D3DSTATETTw;
-   if ( m_state & STATE_HILIGHT )
-   {
-       icon = 4;
-       zoom = 0.9f;
-       mode = D3DSTATENORMAL;
-   }
-   if ( m_state & STATE_CHECK )
-   {
-       icon = 1;
-       zoom = 0.8f;
-       mode = D3DSTATENORMAL;
-   }
-   if ( m_state & STATE_PRESS )
-   {
-       icon = 1;
-       zoom = 1.0f;
-       mode = D3DSTATENORMAL;
-   }
-   if ( m_icon == 6 || m_icon == 7 )  // pause ou film ?
-   {
-       icon = -1;  // pas de fond
-       zoom = 1.0f;
-   }
-
-   m_engine->SetTexture("button3.tga");
-
-   if ( icon != -1 )
-   {
-       m_engine->SetState(mode);
-       DrawVertex(icon, 0.95f);
-   }
-
-   m_engine->SetState(D3DSTATETTb);
-   DrawVertex(m_icon, zoom);
-
-   if ( m_state & STATE_FRAME )
-   {
-       FPOINT  p1, p2, c, uv1, uv2;
-       float   zoom, dp;
-
-       m_engine->SetTexture("button2.tga");
-       m_engine->SetState(D3DSTATETTw);
-
-       zoom = 0.9f+sinf(m_time*8.0f)*0.1f;
-
-       p1.x = m_pos.x;
-       p1.y = m_pos.y;
-       p2.x = m_pos.x + m_dim.x;
-       p2.y = m_pos.y + m_dim.y;
-
-       c.x = (p1.x+p2.x)/2.0f;
-       c.y = (p1.y+p2.y)/2.0f;  // centre
-
-       p1.x = (p1.x-c.x)*zoom + c.x;
-       p1.y = (p1.y-c.y)*zoom + c.y;
-       p2.x = (p2.x-c.x)*zoom + c.x;
-       p2.y = (p2.y-c.y)*zoom + c.y;
-
-       p2.x -= p1.x;
-       p2.y -= p1.y;
-
-       uv1.x = 176.0f/256.0f;
-       uv1.y = 224.0f/256.0f;
-       uv2.x = 192.0f/256.0f;
-       uv2.y = 240.0f/256.0f;
-
-       dp = 0.5f/256.0f;
-       uv1.x += dp;
-       uv1.y += dp;
-       uv2.x -= dp;
-       uv2.y -= dp;
-
-       DrawIcon(p1, p2, uv1, uv2);
-   }
-
-   if ( (m_state & STATE_RUN) && Mod(m_time, 0.7f) >= 0.3f )
-   {
-       FPOINT  uv1, uv2;
-       float   dp;
-
-       m_engine->SetTexture("button3.tga");
-       m_engine->SetState(D3DSTATETTw);
-
-       uv1.x = 160.0f/256.0f;
-       uv1.y =   0.0f/256.0f;
-       uv2.x = 192.0f/256.0f;
-       uv2.y =  32.0f/256.0f;
-
-       dp = 0.5f/256.0f;
-       uv1.x += dp;
-       uv1.y += dp;
-       uv2.x -= dp;
-       uv2.y -= dp;
-
-       DrawIcon(m_pos, m_dim, uv1, uv2);
-   }
 }
 
 // Dessine le tableau des vertex.
